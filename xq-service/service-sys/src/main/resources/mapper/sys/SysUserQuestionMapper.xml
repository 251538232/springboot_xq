<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="jp.co.xq.service.sys.mapper.SysUserQuestionMapper">
  <resultMap id="BaseResultMap" type="jp.co.xq.service.sys.model.SysUserQuestion">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="question_content" jdbcType="VARCHAR" property="questionContent" />
    <result column="answer_content" jdbcType="VARCHAR" property="answerContent" />
    <result column="answer_user_id" jdbcType="BIGINT" property="answerUserId" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_id, type, title, question_content, answer_content, answer_user_id, status, 
    create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="jp.co.xq.service.sys.model.SysUserQuestionExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_user_question
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_user_question
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from sys_user_question
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="jp.co.xq.service.sys.model.SysUserQuestionExample">
    delete from sys_user_question
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="jp.co.xq.service.sys.model.SysUserQuestion">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into sys_user_question (user_id, type, title, 
      question_content, answer_content, answer_user_id, 
      status, create_time, update_time
      )
    values (#{userId,jdbcType=BIGINT}, #{type,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, 
      #{questionContent,jdbcType=VARCHAR}, #{answerContent,jdbcType=VARCHAR}, #{answerUserId,jdbcType=BIGINT}, 
      #{status,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="jp.co.xq.service.sys.model.SysUserQuestion">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into sys_user_question
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="questionContent != null">
        question_content,
      </if>
      <if test="answerContent != null">
        answer_content,
      </if>
      <if test="answerUserId != null">
        answer_user_id,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="questionContent != null">
        #{questionContent,jdbcType=VARCHAR},
      </if>
      <if test="answerContent != null">
        #{answerContent,jdbcType=VARCHAR},
      </if>
      <if test="answerUserId != null">
        #{answerUserId,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="jp.co.xq.service.sys.model.SysUserQuestionExample" resultType="java.lang.Long">
    select count(*) from sys_user_question
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sys_user_question
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.questionContent != null">
        question_content = #{record.questionContent,jdbcType=VARCHAR},
      </if>
      <if test="record.answerContent != null">
        answer_content = #{record.answerContent,jdbcType=VARCHAR},
      </if>
      <if test="record.answerUserId != null">
        answer_user_id = #{record.answerUserId,jdbcType=BIGINT},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sys_user_question
    set id = #{record.id,jdbcType=BIGINT},
      user_id = #{record.userId,jdbcType=BIGINT},
      type = #{record.type,jdbcType=VARCHAR},
      title = #{record.title,jdbcType=VARCHAR},
      question_content = #{record.questionContent,jdbcType=VARCHAR},
      answer_content = #{record.answerContent,jdbcType=VARCHAR},
      answer_user_id = #{record.answerUserId,jdbcType=BIGINT},
      status = #{record.status,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="jp.co.xq.service.sys.model.SysUserQuestion">
    update sys_user_question
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="questionContent != null">
        question_content = #{questionContent,jdbcType=VARCHAR},
      </if>
      <if test="answerContent != null">
        answer_content = #{answerContent,jdbcType=VARCHAR},
      </if>
      <if test="answerUserId != null">
        answer_user_id = #{answerUserId,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="jp.co.xq.service.sys.model.SysUserQuestion">
    update sys_user_question
    set user_id = #{userId,jdbcType=BIGINT},
      type = #{type,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      question_content = #{questionContent,jdbcType=VARCHAR},
      answer_content = #{answerContent,jdbcType=VARCHAR},
      answer_user_id = #{answerUserId,jdbcType=BIGINT},
      status = #{status,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into sys_user_question
    (user_id, type, title, question_content, answer_content, answer_user_id, status, 
      create_time, update_time)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.userId,jdbcType=BIGINT}, #{item.type,jdbcType=VARCHAR}, #{item.title,jdbcType=VARCHAR}, 
        #{item.questionContent,jdbcType=VARCHAR}, #{item.answerContent,jdbcType=VARCHAR}, 
        #{item.answerUserId,jdbcType=BIGINT}, #{item.status,jdbcType=INTEGER}, #{item.createTime,jdbcType=TIMESTAMP}, 
        #{item.updateTime,jdbcType=TIMESTAMP})
    </foreach>
  </insert>
  <insert id="batchInsertSelective" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    <choose>
      <when test="selective != null and selective.length > 0">
        insert into sys_user_question (
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName}
        </foreach>
        )
        values
        <foreach collection="list" item="item" separator=",">
          (
          <foreach collection="selective" item="column" separator=",">
            <if test="'user_id'.toString() == column.value">
              #{item.userId,jdbcType=BIGINT}
            </if>
            <if test="'type'.toString() == column.value">
              #{item.type,jdbcType=VARCHAR}
            </if>
            <if test="'title'.toString() == column.value">
              #{item.title,jdbcType=VARCHAR}
            </if>
            <if test="'question_content'.toString() == column.value">
              #{item.questionContent,jdbcType=VARCHAR}
            </if>
            <if test="'answer_content'.toString() == column.value">
              #{item.answerContent,jdbcType=VARCHAR}
            </if>
            <if test="'answer_user_id'.toString() == column.value">
              #{item.answerUserId,jdbcType=BIGINT}
            </if>
            <if test="'status'.toString() == column.value">
              #{item.status,jdbcType=INTEGER}
            </if>
            <if test="'create_time'.toString() == column.value">
              #{item.createTime,jdbcType=TIMESTAMP}
            </if>
            <if test="'update_time'.toString() == column.value">
              #{item.updateTime,jdbcType=TIMESTAMP}
            </if>
          </foreach>
          )
        </foreach>
      </when>
      <otherwise>
        <foreach collection="list" item="item" separator=";">
          insert into sys_user_question
          <trim>
            <trim prefix="(" suffix=")" suffixOverrides=",">
              <if test="item.userId != null">
                user_id,
              </if>
              <if test="item.type != null">
                type,
              </if>
              <if test="item.title != null">
                title,
              </if>
              <if test="item.questionContent != null">
                question_content,
              </if>
              <if test="item.answerContent != null">
                answer_content,
              </if>
              <if test="item.answerUserId != null">
                answer_user_id,
              </if>
              <if test="item.status != null">
                status,
              </if>
              <if test="item.createTime != null">
                create_time,
              </if>
              <if test="item.updateTime != null">
                update_time,
              </if>
            </trim>
          </trim>
          values
          <trim>
            <trim prefix="(" suffix=")" suffixOverrides=",">
              <if test="item.userId != null">
                #{item.userId,jdbcType=BIGINT},
              </if>
              <if test="item.type != null">
                #{item.type,jdbcType=VARCHAR},
              </if>
              <if test="item.title != null">
                #{item.title,jdbcType=VARCHAR},
              </if>
              <if test="item.questionContent != null">
                #{item.questionContent,jdbcType=VARCHAR},
              </if>
              <if test="item.answerContent != null">
                #{item.answerContent,jdbcType=VARCHAR},
              </if>
              <if test="item.answerUserId != null">
                #{item.answerUserId,jdbcType=BIGINT},
              </if>
              <if test="item.status != null">
                #{item.status,jdbcType=INTEGER},
              </if>
              <if test="item.createTime != null">
                #{item.createTime,jdbcType=TIMESTAMP},
              </if>
              <if test="item.updateTime != null">
                #{item.updateTime,jdbcType=TIMESTAMP},
              </if>
            </trim>
          </trim>
        </foreach>
      </otherwise>
    </choose>
  </insert>
  <cache type="jp.co.xq.service.base.cache.RedisCache" />
</mapper>